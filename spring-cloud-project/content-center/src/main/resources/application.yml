server:
  port: 8082

spring:
  cloud:
    nacos:
      discovery:
        # 指定nacos server的地址
        server-addr: localhost:8848
        cluster-name: BJ
    sentinel:
      filter:
        # 打开/关闭掉对Spring MVC端点的保护
        enabled: true
      transport:
        # 指定sentinel控制台的地址
        dashboard: localhost:8080
      # 配置web接口上下文不合并
      web-context-unify: false
  datasource:
    url: jdbc:mysql://localhost:3306/content_center?serverTimezone=UTC&useSSL=false
    hikari:
      username: root
      password: 123456
      # >= 6.x: com.mysql.cj.jdbc.Driver
      # <= 5.x: com.mysql.jdbc.Driver
      driver-class-name: com.mysql.cj.jdbc.Driver

# 通过属性配置内容中心访问用户中心的Ribbon负载均衡规则，优先级比UserCenterRibbonConfiguration的代码配置更高
#user-center:
#  ribbon:
#    NFLoadBalancerRuleClassName: com.netflix.loadbalancer.RandomRule


# 配置Ribbon加载策略为饥饿加载，提高第一次调用用户中心的速度(默认为延迟加载)，
# clients配置项如果有多个，可以使用逗号分割
ribbon:
  eager-load:
    clients: user-center
logging:
  level:
    tech.punklu.contentcenter.feignclient.UserCenterFeignClient: debug
feign:
  httpclient:
    # 让feign使用apache httpclient做请求；而不是默认的urlconnection，提高性能
    enabled: true
    # feign的最大连接数
    max-connections: 200
    # feign单个路径的最大连接数
    max-connections-per-route: 50
  client:
    config:
      # 想要调用的微服务的名称,如果想配置全局的，只需要设置为default即可
      default:
        loggerLevel: full
        requestInterceptors:
          - tech.punklu.contentcenter.feignclient.interceptor.TokenRelayRequestInterceptor
  sentinel:
    # 为Feign整合Sentinel
    enabled: true
management:
  endpoints:
    web:
      exposure:
        include: '*'
rocketmq:
  name-server: 127.0.0.1:9876
  # 设置rocketMQ消息生产者组
  producer:
    group: test-group

JWT_KEY:
  punk1uJWTTokenSecret
JWT_EXPIRE_TIME:
  3600000